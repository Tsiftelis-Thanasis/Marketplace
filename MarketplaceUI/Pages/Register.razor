@page "/register"
@using Marketplace.Models
@using MarketplaceUI.Interfaces
@inject ILoginService LoginService

<h3>Register</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username:</label>
        <InputText @bind-Value="registerModel.Username" class="form-control" />
    </div>
    <div>
        <label>Password:</label>
        <InputText @bind-Value="registerModel.Password" type="password" class="form-control" />
    </div>
    <div>
        <label>Email:</label>
        <InputText @bind-Value="registerModel.Email" type="email" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <p>@message</p>
}

@code {
    private RegisterModel registerModel = new();
    private string? message;

    private async Task HandleRegister()
    {
        var success = await LoginService.RegisterAsync(registerModel);
        message = success ? "Registration successful!" : "Registration failed. Try again.";
    }
}
